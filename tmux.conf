##################################################
#     TMUX Action Key (Environment Bind-key)     #
##################################################
# Define New Key
set -g prefix C-x
# Remove Default Key
unbind C-b
# Pass Defined Key
bind C-x send-prefix



####################################################
#   My TMUX Environment Settings & Configuration   #
####################################################
# Color Settings (tmux version 2.8 & earlier)
 ## Default Window title colors
#set-window-option -g window-status-fg white
#set-window-option -g window-status-bg blue
#set-window-option -g window-status-attr dim
#set-option -g status-bg green
 ## Active Window colors
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-bg red
#set-window-option -g window-status-current-attr bright

# Color Settings (tmux version 2.9 & later)
 ## Default Window title colors
set-window-option -g window-status-style fg=white
set-window-option -g window-status-style bg=blue
set-window-option -g window-status-style dim
set-option -g status-style bg=green
set-window-option -g window-status-separator |
 ## Active Window title colors
set-window-option -g window-status-current-style fg=white
set-window-option -g window-status-current-style bg=red
set-window-option -g window-status-current-style bright
set-window-option -g window-status-last-style fg=white
set-window-option -g window-status-last-style bg=black
set-window-option -g window-status-last-style dim
 ## Highlight Active Window & Pane
set-option -g pane-active-border-style fg=blue

# My Status Bar (most ideal for laptops)
#set-option -g status-left 'Battery: #(/usr/local/bin/power.sh)   #[default] Windows:'
# Notifications
setw -g monitor-activity on
setw -g visual-activity on
# Show messages and notifications for 1/2 second.
set-option -g display-time 500
# Attempt to allow mouse scrolling - appears to have failed.
##  NOTE: These options have been deprecated in newer version of TMUX and the GNOME Shell console.
#set -g mode-mouse off
#set-option -g mouse-select-pane off
#set-window-option -g mode-mouse off
# Set shell buffer limit (from default of 20,000)
set -g history-limit 100000
# Monitor windows for activity
bind-key m setw monitor-activity
# Reload Config File (to get changes without restarting tmux)
bind-key r source-file ~/.tmux.conf



############################################
#         Window & Pane Management         #
############################################
# Start Window Numbering at 1 (instead of default of 0)
set -g base-index 1
# Automatically Rename Windows
set -g automatic-rename on
# New Window with SSH Connection at Open
bind S command-prompt -p ssh: "new-window -n %1 'ssh %1'"
# Join a pain to an existing window
bind-key @ command-prompt -p "create pane from:"  "join-pane -s ':%%'"
# Monitor windows for activity
bind-key m setw monitor-activity
# Kill Window:
##  ask verification
bind X confirm-before -p "kill-window #W? (y/n)" kill-window
##  do NOT ask verification
#bind X kill-window
#   NOTE:   "Bind-key + !" creates a new window from the current pane.
# Pane Splitting
unbind %
bind | split-window -h
bind - split-window -v 
# Pane Re-Sizing
bind left resize-pane -L 3
bind right resize-pane -R 3
bind down resize-pane -D 3
bind up resize-pane -U 3
# Pane Switching
# NOTE: BASH/Shell- & Emacs-Like Line Navigation
bind C-a select-pane -L
bind C-e select-pane -R
bind C-n select-pane -D
bind C-p select-pane -U
# Kill Pane:
##  ask verification
bind x confirm-before -p "kill-pane #W? (y/n)" kill-pane
##  do NOT ask verification
#bind x kill-pane



#############################################
#    Personalized Session Customizations    #
#############################################
# Session Initialization Configuration Bindings
bind T source-file ~/.tmux/telecom-prod
bind t source-file ~/.tmux/telecom-dr
bind P source-file ~/.tmux/printing
bind V source-file ~/.tmux/voice-portal
# Keys to switch between active sessions.
bind-key q switch-client -t 0
bind-key w switch-client -t 1
bind-key e switch-client -t 2
















# To start a session with split windows (multiple panes),
#  include the split command below the neww you would like to split.
#
# This information would be placed inside of your
#  Session Configuration file(s).
#  These file(s) would be referenced above. See section titled
#  "Session Initialization Configuration Bindings".
####################################################################

#new  -s SessionName -n WindowName Command
#neww -n foo/bar foo
#splitw -v -p 50 -t 0 bar
#selectw -t 1 
#selectp -t 0
#would open 2 windows, the second of which would be named foo/bar and would be split vertically in half (50%) with foo running above bar. Focus would be in window 2 (foo/bar), top pane (foo).
#Note: Numbering for sessions, windows and panes starts at zero, unless you have specified a base-index of 1 in your .conf

#To manage multiple sessions, source separate session files from your conf file:

# initialize sessions
#bind F source-file ~/.tmux/foo
#bind B source-file ~/.tmux/bar








################################################################
# A SUBSET OF OTHER COMMANDS I DO NOT CURRENTLY USE
################################################################

#!/bin/sh
#tmux new-session -d -s hostname
 
#tmux new-window -t hostname:1 -n 'Server1' 'ssh user@10.x.x.x'
#tmux new-window -t hostname:2 -n 'Server2' 'ssh user@10.x.x.x'
#tmux new-window -t hostname:3 -n 'Server3' 'ssh user@10.x.x.x'
#tmux new-window -t hostname:4 -n 'Server4' 'ssh user@10.x.x.x'
#tmux new-window -t hostname:5 -n 'Server5' 'ssh user@10.x.x.x'

#tmux select-window -t hawkhost:1
#tmux -2 attach-session -t hawkhost



#set-window-option -g mode-keys emacs
#set-option -g status-keys emacs

#set-window-option -g utf8 on

#set-option -g bell-action none
#set-option -g default-terminal "screen-256color"

#bind-key k kill-pane

# Keys to switch session.
#bind-key q switchc -t0
#bind-key w switchc -t1
#bind-key e switchc -t2

#This snippet does the same thing, but also checks tmux is installed before trying to launch it. It also tries to reattach you to an existing tmux session at logout, so that you can shut down every tmux session quickly from the same terminal at logout.

# # TMUX
# if which tmux 2>&1 >/dev/null; then
#     # if no session is started, start a new session
#     if test -z ${TMUX}; then
#         tmux
#     fi
#     # when quitting tmux, try to attach
#     while test -z ${TMUX}; do
#         tmux attach || break
#     done
# fi

#To start a session with split windows (multiple panes), include the splitw command below the neww you would like to split; thus: 

#new  -s SessionName -n WindowName Command
#neww -n foo/bar foo
#splitw -v -p 50 -t 0 bar
#selectw -t 1 
#selectp -t 0
#would open 2 windows, the second of which would be named foo/bar and would be split vertically in half (50%) with foo running above bar. Focus would be in window 2 (foo/bar), top pane (foo).
#Note: Numbering for sessions, windows and panes starts at zero, unless you have specified a base-index of 1 in your .conf

#To manage multiple sessions, source separate session files from your conf file:

# initialize sessions
#bind F source-file ~/.tmux/foo
#bind B source-file ~/.tmux/bar

#bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; run-shell "$TERMINAL -e 'cat /tmp/tmux-buffer | urlview'"

#bind-key y setw force-width 81
#bind-key u setw force-width 0

#bind-key D detach \; lock
#bind-key N neww \; splitw -d

# Refresh the status bar every 1 second.
#set-option -g status-interval 1000

# default statusbar colors
#set-option -g status-fg white
#set-option -g status-attr default

# active window title colors
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-bg default

# command/message line colors
#set-option -g message-fg white
#set-option -g message-bg black
#set-option -g message-attr bright

#set -g mode-mouse on
